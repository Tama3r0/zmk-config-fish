// キーマップを更新する方法は https://o24.works/fish/guide を参照
// 視覚的に編集するには https://o24.works/fish/editor を参照


// 定義を呼んでくる
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>


// 特殊入力の挙動を調整できる

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <225>;
    quick-tap-ms = <200>;
    require-prior-idle-ms = <150>;
};

&lt {
    flavor = "balanced";
    tapping-term-ms = <175>;
    quick-tap-ms = <200>;
};

&sk {
};

&sl {
};

&caps_word {
};

&key_repeat {
};


/ {
    // 独自の入力を定義できる（上級者向け）

    behaviors {
    };

    macros {
    };

    conditional_layers {
    };


    // 複数キーの同時押しに特別の入力を設定できる
    // キー番号早見表：
    //       0  1  2  3     4  5  6  7
    // 8  9 10 11 12 13    14 15 16 17 18 19
    //   20 21 22 23          24 25 26 27
    //            28 29    30 31

    combos {
        compatible = "zmk,combos";
        timeout-ms = <100>;
        require-prior-idle-ms = <150>;

        combo_reset_L {
            key-positions = <3 8 13>;
            bindings = <&bootloader>;
        };


        combo_lang2 {
            key-positions = <10 11 12>;
            bindings = <&kp LANG2>;
            layers = <0>;
        };

        combo_lang1 {
            key-positions = <15 16 17>;
            bindings = <&kp LANG1>;
            layers = <0>;
        };

        combo_comma {
            key-positions = <15 30>;
            bindings = <&kp COMMA>;
            layers = <0 1>;
        };

        combo_dot {
            key-positions = <16 30>;
            bindings = <&kp DOT>;
            layers = <0 1>;
        };


        combo_reset_R {
            key-positions = <4 14 19>;
            bindings = <&bootloader>;
        };

        combo_studio_unlock {
            key-positions = <20 21 22 23>;
            bindings = <&studio_unlock>;
        };

        combo_minus {
            key-positions = <15 16 30>;
            bindings = <&kp MINUS>;
            layers = <0>;
        };

        combo_lbkt {
            key-positions = <2 29>;
            bindings = <&kp RBKT>;
            layers = <0>;
        };

        combo_rbkt {
            key-positions = <5 30>;
            bindings = <&kp NON_US_HASH>;
            layers = <0>;
        };

        combo_n3 {
            key-positions = <15 16>;
            bindings = <&kp N3>;
            layers = <1>;
        };

        combo_n5 {
            key-positions = <15 17>;
            bindings = <&kp N5>;
            layers = <1>;
        };

        combo_n6 {
            key-positions = <16 17>;
            bindings = <&kp N6>;
            layers = <1>;
        };

        combo_n7 {
            key-positions = <15 16 17>;
            bindings = <&kp N7>;
            layers = <1>;
        };

        combo_n9 {
            key-positions = <15 18>;
            bindings = <&kp N9>;
            layers = <1>;
        };

        combo_n0 {
            key-positions = <16 18>;
            bindings = <&kp N0>;
            layers = <1>;
        };

        combo_f3 {
            key-positions = <15 16>;
            bindings = <&kp F3>;
            layers = <2>;
        };

        combo_f5 {
            key-positions = <15 17>;
            bindings = <&kp F5>;
            layers = <2>;
        };

        combo_f7 {
            key-positions = <15 16 17>;
            bindings = <&kp F7>;
            layers = <2>;
        };

        combo_f6 {
            key-positions = <16 17>;
            bindings = <&kp F6>;
            layers = <2>;
        };

        combo_f9 {
            key-positions = <15 18>;
            bindings = <&kp F9>;
            layers = <2>;
        };

        combo_f10 {
            key-positions = <16 18>;
            bindings = <&kp F10>;
            layers = <2>;
        };

        combo_f11 {
            key-positions = <15 16 18>;
            bindings = <&kp F11>;
            layers = <2>;
        };

        combo_f12 {
            key-positions = <17 18>;
            bindings = <&kp F12>;
            layers = <2>;
        };

        combo_qmark {
            key-positions = <17 30>;
            bindings = <&kp QMARK>;
            layers = <0>;
        };

        combo_excl {
            key-positions = <18 30>;
            bindings = <&kp EXCL>;
            layers = <0>;
        };

        combo_caret {
            key-positions = <6 15 17>;
            bindings = <&kp EQUAL>;
            layers = <0>;
        };
    };
    

    // キーに入力を割り当てる
    // 型（&...）は https://zmk.dev/docs/behaviors/... を参照
    // キーコードは https://zmk.dev/docs/codes/... を参照

    keymap {
        compatible = "zmk,keymap";

        layer_keymap {
            bindings = <
                        &kp Q       &kp U       &kp Y       &kp F               &kp B       &kp W       &kp N       &kp R       
&mt LCTRL ESC &kp E     &mt LGUI I  &mt LALT A  &mt LSHFT O &kp COMMA           &kp G       &mt RSHFT S &mt RALT K  &mt RGUI T  &kp H       &kp P       
            &kp Z       &kp X       &kp C       &kp V                                       &kp D       &kp M       &kp L       &kp J       
                                                &kp BSPC    &lt 2 RET           &lt 1 SPACE &mt RCTRL TAB 
            >;
        };

        layer_math {
            bindings = <
                        &kp DQT     &kp FSLH    &kp BSLH    &none               &none       &kp PLUS    &kp STAR    &kp MINUS   
&trans      &kp TILDE   &kp HASH    &kp UNDER   &kp AT      &none               &none       &kp N1      &kp N2      &kp N4      &kp N8      &none       
            &trans      &trans      &trans      &trans                                      &trans      &trans      &trans      &trans      
                                                &trans      &kp DEL             &trans      &trans      
            >;
        };

        layer_navi {
            bindings = <
                        &none       &kp UP      &none       &none               &none       &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 
&trans      &none       &kp LEFT    &kp DOWN    &kp RIGHT   &none               &none       &kp F1      &kp F2      &kp F4      &kp F8      &none       
            &trans      &trans      &trans      &trans                                      &trans      &trans      &trans      &trans      
                                                &trans      &kp BSPC            &trans      &trans      
            >;
        };
    };
};
